@page "/Permisos/{Id:int?}"
@using SGE.Aplicacion.Enumerativos
@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject CasoDeUsoObtenerPermisosUsuario CasoDeUsoObtenerPermisosUsuario
@inject CasoDeUsoQuitarPermiso CasoDeUsoQuitarPermiso
@inject CasoDeUsoAgregarPermiso CasoDeUsoAgregarPermiso
@inject ServicioAutorizacion ServicioAutorizacion

@if (ServicioAutorizacion.UsuarioActual != null && ServicioAutorizacion.PoseeElPermiso(ServicioAutorizacion.UsuarioActual.Id, Permiso.Admin))
{
    <h3>AGREGAR PERMISOS AL USUARIO ID @Id</h3>
    <select @bind="nuevoPermiso" class="form-select-sm">
        <option value="@Permiso.Lectura">Lectura</option>
        <option value="@Permiso.ExpedienteAlta">Expediente Alta</option>
        <option value="@Permiso.ExpedienteModificacion">Expediente Modificacion</option>
        <option value="@Permiso.TramiteAlta">Tramite Alta</option>
        <option value="@Permiso.TramiteModificacion">Tramite Modificacion</option>
        <option value="@Permiso.TramiteBaja">Tramite Baja</option>
        <option value="@Permiso.ExpedienteBaja">Expediente Baja</option>
    </select>

    <button class="btn btn-primary" @onclick="()=>AgregarPermiso(Id, nuevoPermiso)">Agregar</button>

    <table class="table">
        <thead>
            <tr>
                <th>Tipo Permiso</th>
                <th>Accion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var permiso in listaPermisos)
            {
                <tr>
                    <td>@permiso.tipoPermiso</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>QuitarPermiso(Id, permiso.tipoPermiso)">Quitar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h2 class="bg-warning">No tienes permiso para acceder a esta pagina</h2>
}

@code{
    Permiso nuevoPermiso;
    List<EPermiso> listaPermisos = new List<EPermiso>();
    [Parameter] public int Id { get; set; }

    protected override void OnParametersSet()
    {
        try
        {
            listaPermisos = CasoDeUsoObtenerPermisosUsuario.Ejecutar(Id);
        }
        catch(Exception)
        {
            Navegador.NavigateTo("/Usuarios");
        }
    }

    private void QuitarPermiso(int idUser, Permiso tipo)
    {
        CasoDeUsoQuitarPermiso.Ejecutar(idUser, tipo);
        listaPermisos = CasoDeUsoObtenerPermisosUsuario.Ejecutar(idUser);
    }

    private void AgregarPermiso(int idUser, Permiso tipo)
    {
        CasoDeUsoAgregarPermiso.Ejecutar(idUser, tipo);
        listaPermisos = CasoDeUsoObtenerPermisosUsuario.Ejecutar(idUser);

    }
    

}