@page "/listadoExpedientes"
@rendermode InteractiveServer
@inject NavigationManager Navegador
@inject CasoDeUsoListarExpedientes CasoDeUsoListarExpedientes
@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja


<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar" />

<table class="table">
    <thead>
        <tr>
            <th>Codigo</th>
            <th>Caratula</th>
            <th>Fecha Creacion</th>
            <th>Fecha Actualizacion</th>
            <th>Ultimo Usuario que modifico</th>
            <th>Estado</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var exp in _lista)
        {
            <tr>
                <td>@exp.Id</td>
                <td>@exp.Caratula</td>
                <td>@exp.FechaCreacion</td>
                <td>@exp.FechaActualizacion</td>
                <td>@exp.IdUpdateUser</td>
                <td>@exp.Estado</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>EditarExpediente(exp)">Editar</button>
                    <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(exp)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<Expediente> _lista = new List<Expediente>();
    protected override void OnInitialized()
    {
        _lista = CasoDeUsoListarExpedientes.Ejecutar();
    }

    DialogoConfirmacion dialogo = null!;
    Expediente? _ExpedienteEliminar = null;

    private void ConfirmarEliminacion(Expediente exp)
    {
        _ExpedienteEliminar = exp;
        dialogo.Mensaje = $"Desea eliminar el expediente {_ExpedienteEliminar.Caratula}?";
        dialogo.Mostrar();
    }

    private void EditarExpediente(Expediente exp)
    {
        Navegador.NavigateTo($"AgregarExpediente/{exp.Id}");
    }

    private void Eliminar()
    {
        CasoDeUsoExpedienteBaja.Ejecutar(_ExpedienteEliminar.Id, 1); //rev
        _lista = CasoDeUsoListarExpedientes.Ejecutar();
    }

}